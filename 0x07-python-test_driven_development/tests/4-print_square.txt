=======================================
Functional Testing for 4-print_square.py
=======================================

This module contains a function ``print_square(size)`` that 
prints a square using #

Importing the function from the ``3-say_my_name`` module

::

    >>> print_square = __import__('4-print_square').print_square

Valid cases
===========

Passing 1

::

    >>> print_square(1)
    #

Passing 4

::

    >>> print_square(4)
    ####
    ####
    ####
    ####

Passing 10

::

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Passing 0

::

    >>> print_square(0)

Invalid cases
=============

Passing a string instead of an int

::

    >>> print_square("am a String")
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer

Passing a float

::

    >>> print_square(2.2)
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer

Passing a negative float

::

    >>> print_square(-2.2)
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer


Pasiing a None

::

    >>> print_square(None)
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer

Passing a negative int

::

    >>> print_square(-5)
    Traceback (most recent call last):
      ...
    ValueError: size must be >= 0

Passing no argument

::

    >>> print_square()
    Traceback (most recent call last):
      ...
    TypeError: print_square() missing 1 required positional argument: 'size'
