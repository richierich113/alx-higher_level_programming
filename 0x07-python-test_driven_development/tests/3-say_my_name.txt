=======================================
Functional Testing for 3-say_my_name.py
=======================================

This module contains a function ``say_my_name`` that prints
``first name`` ``last name`` as strings


Importing the function from the ``3-say_my_name`` module

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Valid cases
============

Passing strings for both ``first_name`` and ``last_name``

::

    >>> say_my_name("John", "Smith")
    My name is John Smith

::

    >>> say_my_name("Richard Boakye", "Duah")
    My name is Richard Boakye Duah

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Richie")
    My name is Richie 

Invalid cases
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(6, "Rich")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Animals", ["dog", "cat", "chicken"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Height": 6, "Length": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
